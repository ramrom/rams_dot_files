#!/bin/zsh
# NOTE: need zsh just for the `fzf --header=$'line1\nline2'` to read the `\n` as a new line, dash in linux doesnt support it

# FDOCK - Fzf + docker-cli

usage () { echo 'Usage: fdock [ -h(help) ] [ -i(images) ] [ -f(fzf full height) ]'; }

FZF_HEIGHT=50
while getopts 'hif' x; do
    case $x in
        h) usage && exit 1 ;;
        i) DOCKER_IMAGES=1 ;;
        f) FZF_HEIGHT=100 ;;
        *) usage && exit 1 ;;
    esac
done
shift $(($OPTIND - 1))

if [ -n "$DOCKER_IMAGES" ]; then
    out=$(docker images -a | fzf +m --height "$FZF_HEIGHT" --nth=1 --header-lines=1 \
        --header='ctrl-i->run' \
        --expect='ctrl-i')

    key=$(echo "$out" | head -1)
    imageline=$(echo "$out" | tail -1)
    if [ -n "$imageline" ]; then
        image=$(echo "$imageline" | awk '{print $3}')
        case "$key" in
            "ctrl-i") docker run -d "$image" ;;
        esac
    fi
else
    preview_cmd='cont_id=$(echo {} | awk '\''{print $1}'\''); docker logs -f $cont_id'
    preview_cmd_2='cont_id=$(echo {} | awk '\''{print $1}'\''); docker inspect $cont_id'
    out=$(docker ps --all | fzf +m --height "$FZF_HEIGHT" --nth=2 --header-lines=1 \
        --header=$'ctrl-g->shell, ctrl-y->stop, ctrl-o->restart, ctrl-space->kill\nctrl-i->start, ctrl-r->remove, ctrl-s->preview-config' \
        --expect='ctrl-y,ctrl-o,ctrl-space,ctrl-i,ctrl-r,ctrl-g' \
        --bind "ctrl-s:preview(${preview_cmd_2})" \
        --preview "$preview_cmd")

    key=$(echo "$out" | head -1)
    containerline=$(echo "$out" | tail -1)
    if [ -n "$containerline" ]; then
        container=$(echo "$containerline" | awk '{print $1}')
        case "$key" in
            "ctrl-i") docker start "$container" ;;
            "ctrl-y") docker stop "$container" ;;
            "ctrl-o") docker restart "$container" ;;
            "ctrl-space") docker kill "$container" ;;
            "ctrl-r") docker rm "$container" ;;
            "ctrl-g") docker exec -it "$container" /bin/bash ;;
            *) echo "$container"
        esac
    fi
fi
