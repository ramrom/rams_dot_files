#!/bin/sh

. ~/rams_dot_files/shell_core_tools.sh || { echo "could not find shell_core_tools.sh" && exit 1; }

[ -z "$1" ] && echo "first arg needed for filename" && exit 1
require_vars file_type || exit 1
caller=$0 cmds_defined rg || exit 1

# e.g. "Some Title (2000) [1080p] [FOO]"
function file_rename() {
    local f=$(echo "$1" | sed 's/ /-/g' | sed 's/\./_/g')
    local charsbeforefirstparen=$(echo "$f" | rg -o  '([^\(].*)\(.*$' -r '$1' --color never)
    local charsafterfirstparen=$(echo "$f" | rg -o  '[^\(].*(\(.*$)' -r '$1' --color never)
    local a=$(echo $charsbeforefirstparen | sed 's/-/_/g')
    local a=$(echo $a | sed 's/.$/-/')
    # local b=$(echo $charsafterfirstparen | sed 's/[()\[]//g')  # sed fails literal \] in [] char class
    local b=$(echo $charsafterfirstparen | tr -d "()[]")
    echo $a$b
}

# e.g. "Some.Title.2000.1080p.[FOO].mp4"
function file_rename2() {
    local charsbeforeyear=$(echo "$1" | rg -o '(.*)\.\d{4}\..*' -r '$1' --color never)
    local charsafteryear=$(echo "$1" | rg -o '.*(\.\d{4}\..*)' -r '$1' --color never)

    charsbeforeyear=$(echo $charsbeforeyear | sed 's/\./_/g')

    charsafteryear=$(echo $charsafteryear | sed -E 's/(\[.*)\.(.*\])/\1_\2/g')  # handle [FOO.BAR]
    charsafteryear=$(echo $charsafteryear | tr -d "()[]")
    charsafteryear=$(echo $charsafteryear | sed 's/\./-/g')            # replace all dots with dash
    charsafteryear=$(echo $charsafteryear | sed -E 's/-(.{3})$/\.\1/') # except keep last file extention dot
    echo $charsbeforeyear$charsafteryear
}

case "$file_type" in
    a) file_rename $1 ;;
    b) file_rename2 $1 ;;
esac
