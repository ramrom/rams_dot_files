RG:
- uses rust regex, it's perl-like: https://docs.rs/regex/1.3.9/regex/bytes/index.html#syntax
- rg vs ag vs ack vs grep: https://beyondgrep.com/feature-comparison/
rg -uuu      - gets close to rgrep
             - u:nogitingore, uu:hidden, uuu:binary
rg --type-list      - list filetype defs
rg -tgo -tsh -Tjs   - search go and sh types, not javascript
rg --json       - print results in json!
rg -g '**/*foo*/**' pattern  - would search in file /bar/befooyar/dude/wut

FZF:
fzf --preview 'bat --style=numbers --color=always {} | head -500'              - preview with bat
fzf --height 40   - only take 40% of screen
vim -o `fzf -m`   - open vim windows for all fzf matches
fzf | xargs bat   - invoke bat on result
fzf -e   - exact match
fzf -m   - multi select
fzf -1   - if 1 match select it
search:
    foo         (fuzzy foo)
    !foo        (exact, not foo)
    'foo        (exact match foo)
    ^foo        (exact prefix, foo at beg of line)
    foo$        (eact suffix, foo at end of line)
    'foo\ bar   (exact match with space "foo bar")
    foo | bar   (fuzzy, foo or bar)
    foo bar     (fuzzy, foo and bar)

FD:
fd -p        - match on full path (default file/dir name)
fd --type f  - close to find, old match on file types
fd -t f -d 1 -H "foo$" -x ls -al   - find all files in current dir, including hidden, that end in "foo" and run ls -al on them
fd . somedir/ -x sh -c 'printf "something"; echo {}; echo "hi"'            - use sh trick here to run complex commands
