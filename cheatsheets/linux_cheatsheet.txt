ubuntu/debian/gnome:
-----------------------------------------
- lsb_release -a        - show distro name and version
- cat /etc/issue        - show distro and version
- `lscpu` or `cat /proc/cpuinfo` for cpu info
- ctr + alt + FnX - switch to tty x
- gnome panel means the top and side bar with clock/date status icons/wdigets, app shortcuts/favs

sudo shutdown -h now (halt now)
sudo shutdown -k (kick everyone off and login disabled, no halting)
sudo shutdown -r now (reboot now)

lsof +f -- /media/usb0   - assuming usb0 is root of filesystem, shows all proceses with file handles in that system

# USER stuff
---------------------------------------
sudo useradd foouser        - create new user with home dir
sudo passwd foouser         - change users password, seems to bypass strength rules
sudo useradd foouser foogroup    - add existing user to new group
sudo useradd foosuer sudo       - will properly add user to group sudo and some others, for sudo access


# SYSTEMD
-------------------------------------------
- great wiki on it: https://wiki.archlinux.org/index.php/Systemd
- inspired by and basically a ripoff of osx's launchd
- makes heavy uses of messages and events, using dbus
- good cmt by arch linux init maintainer on why systemd is good:
    - https://www.reddit.com/r/archlinux/comments/4lzxs3/why_did_archlinux_embrace_systemd/
- base type is unit
    - service (processes/daemons), mount (filesystems), device (/dev devices), socket (sockets)
    - slice - heirarchical manage a resource of group of processes, using cgroups
    - scope - manage set of sys processes, external processes. dont fork their own. scopes not configured via unit config files
    - timer - replacement for cron basically, specify a service unit to run and a schedule for it
    - target - this unit type similar to runlelvel in sysV, so a desired state for the whole system
        - services and other units can be tied to a target, multiple targets can be active simultaneously
systemctl start/stop/restart/reload foo
    - reload doesnt stop and start the service, often is a HUP signal
systemctl status
    - show full status of systemd with full tree
systemctl status foo
    - show status of a unit named foo
systemctl status foo*
    - status of all units that starts with foo
systemctl cat foo
    - get contents of unit file defintion of foo
systemctl list-dependencies foo
    - print a nice tree of unit dependencies for foo
systemctl show foo
    - low levle details of units settings
systemctl get-default
    - print the default target for the system

## JOURNALCTL
- journalctl was also by debian/ubuntu tool to access logs, in /var/log
- it is the cli util to query logs by systemd's logging service, journald
- systemd logs are stored in binary format, use journalctl to access them
journalctl -u foo
    - show full log of service foo,  "-u is unit"
journalctl -u foo.service
    - same as above, if unit is not service type need to type fully, e.g. foo.socket
journalctl -u foo -b
    - show logs since last boot
journalctl --list-boots
    - show list of times system was booted up
journalctl -f -u foounit
    - -f is follow or tail the unit's log
journalctl -f
    - tail ALL units
journalctl -n 100 -u foo
    - see just last 100 last lines for foo unit
journalctl --disk-usage
    - show disk usage of journal
journalctl --vacuum-size=200M
    - delete journal entries
journalctl --verify
    - verify integrity of logs
journalctl config file: /etc/systemd/journald.conf, can restrict max size


# SysV (old init system)
- uses pidfile in /var/run
- script that generally defines bin,conf/pidfile, defines start/stop/reload/status functions for ur bin

service script-name start/stop/restart
service --status-all

desktop shortcuts:
-------------------------------------------
- see https://help.ubuntu.com/community/KeyboardShortcuts

super - usually the "windows" key on keyboards
alt+ctr+t, super+t  - open terminal
alt+ctr+l, super+l  - lock screen
super+tab, alt+tab  - switch between running apps
super+left/right-arrow - snap to left or right half of desktop
super+up/down-arrow - full screen, original
super+m - toggle notif tray
alt+f2  - run command
ctrl+alt arrow - move between desktops
ctrl+alt+delete - logout
ctrl+shift+ c/p - copy and paste

browsers(chrome/firefox):
ctrl-tab    - cycle through tabs
ctrl-w  - close
ctrl-h  - open history
ctrl-b  - bring up bookmarks
ctrl-t  - new tab
ctrl-l  - select url bar
ctrl-r  - reload page
space/space-shift - scroll up/down page

APT:
------------------------------------------
apt-rdepends pkg    - shows decent one level dep tree of pkg
                      (only 1 level tho)
apt-rdepends -r pkg  - show reverse deps
    - apt rdepends pkg
apt rdepends --installed pkg
    - find packages dependent on pkg that are installed on the system
apt-cache showpkg pkg - shows deps and reverse deps,
            shows versions, also shows SHAs and more info
apt-cache rdepends pkg  -r(reverse), show other packages
                        dependent on it i think
apt-cache depends pkg  - show raw dep info of package pkg

apt list --installed - show installed packages
apt list --upgradable - show upgradable packages
sudo apt-get install packageName --no-upgrade  - install new pkg and dont upgrade dependend packages
sudo apt-get purge vsftpd  - remove package and config files
apt-get changelog pkg - see changelog
apt-get check  - check for broken deps
sudo apt-get autoremove pkg - remove a package and it's dependencies
sudo update-alternatives --config foopkg - select alt

sudo apt --dry-run autoremove
    - autoremove remove uneeded pkgs
    - dry-run just shows what it would remove

apt-cache search .*realregex$
    - search locally cached package info only
apt search *something*

apt-cache search --names-only .*foo.*
    - searches regex in package name only
apt search --names-only *something*
    - same

SNAP:
-----------------
# snap invented by ubuntu, more rapid/flexible package system than .deb/apt
# snap isolates packages. each package has a filesystem mounted from a virtual loop device for it
    - snap keeps the old version of the package
snap list
    - list all snap packages installed


Graphical systems:
-----------------------------
- definitions: display server / display manager / window manager / desktop envrionment
    - https://unix.stackexchange.com/questions/20385/windows-managers-vs-login-managers-vs-display-managers-vs-desktop-environment
xrandr  - check graphics stuff
    - ssh session, i `export DISPLAY=:1` and xrandr finds displays
    - xrandr --output DP-0 --mode 2560x1440
    - off: `xrandr --output HDMI-0 --off`, on: `xrandr --output HDMI-0 --auto'
     turn on and be left of other display: `xrandr --output HDMI-0 --auto --left-of DP-0`
wmctrl - window manager control
    - NEEDS DISPLAY VAR SET
    - display window number/ID in hexadecimal, xdotool display in decimal
    - wmctrl -l, will list all windows in window manager, wmctrl -d list desktops, wmctrl -m list name of window manager
    - -G option tells geometry info, heightxwidth, and x,y position on desktop
    - moving a "firefox" named window, `wmctrl -r Firefox -e '0,6,0,1040,708'`
        - can target window by ID with -i `wmctrl -i -r 0x03000003 -t 2`
    - `wmctrl -s 1`, set active desktop to 1
    - `wmctrl -r Psensor -b toggle,fullscreen` , goto fullscreen
    - `wmctrl -r :ACTIVE: -b toggle,shaded` - toggle shade on active window
    - wmctrl -c , close window gracefull
xdotool - http://manpages.ubuntu.com/manpages/trusty/man1/xdotool.1.html
    - NEEDS DISPLAY VAR SET
    xdotool search --onlyvisible --name firefox  # say firefox is window id 123
    xdotool getwindowname 123   # should print `firefox`
    xdotool windowsize 123 800 600
    xdotool windowmove 123 0 1080
nvidia-smi - show nvidia card mem usage, gpu temp, X processes


Devices and file systems:
------------------------------------------------
loopdevices
- regular files in a filesystem that can act as a block device, usually named something like /dev/loopX
- if this file itself has a filesystem it can be mounted, useful for mounting ISO images and such

drive naming convention:
- fd - SATA, sd - SCSI/SATA, hd - IDE
- fda - first SATA drive, hdb - 2nd IDE drive
- hdb1 - 1st partition on 2nd IDE drive

- DIR conventions
    - /         - root filesystem
    - /home     - user directories
    - /export   - data shared over the network mount
    - /mnt      - temporary mount point
    - /media    - removable devices like usb (so not internal HDD)


other linux/ubuntu tools:
------------------------------------------
inxi - cli tool to spit out sys info (cpu, audio, video), `inxi -Fxxx`
stat - get metadata on a file
lsblk - show block level devices
/etc/fstab - file systems mounted at boot
dmidecode - sudo this, get DMI(SMBIOS) system/hardware info, e.g. the motherboard exact chipset version
dconf  - like gsettings?
gsettings  - gnome settings tool
    - can change basically any setting at cli like you could in GNOME settings menu
notify-send - pops up notification
`lsusb -D /dev/bus/usb/002/004`
    - get detailed info about a specific usb device
bluetoothctl - good cli bluetooth tool, see device list, paired, unpaired, connect/disconnect
pacmd - pulseaudio cli tool, query sound devices
    - pacmd list-sinks  # list audio out devices
    - ALSA is sound manager for kernel, can only do one stream
    - pulseaudio is userland program, can mix many
Pavucontrol - pulseaudio cli tool, CHECK IT OUT
    - simul audio streams two diff audio devices, e.g. movie with sound to hdmi, game and sound to base mobo audio dev
        - https://ubuntuforums.org/showthread.php?t=1810812
ss  - good way to see socket usage
pcsx2 -
    - keyboard map: esdf-up/dn/lft/rgt, ijkl-tri/sq/cross/circle, n-start, v-select, aw-l1/l2, ;p-r1/r2
retroarch -
    - main menu - backspace to back, up/down/left/right, (in-game) f1 show main menu
    - enter=start, p=pause, f=fullscreen, escesc=quit, space=runtimefast
    - z=a button, x=b button, h=reset state, o=toggle record movie
transmission - great torrent program
    - https://wiki.archlinux.org/index.php/transmission
    - transmission-daemon --auth  --username foouser --password foopass --port 9091 --allowed "192.168.1.*"
        - configuring daemon with a user and allow a private address range

