# BASIC VARS
set shell sh
set shellopts '-eu'   # -e (exit on error), -u (error on unset vars)
set ifs "\n"          # good seperator for $fs and $fx
set scrolloff 10      # leave space at top and bottom
set icons             # show icon before item
set dircounts         # show # of items in dir
set info size         # show size next to item
set period 1          # refresh every 1 sec for dir updates
set hidden off        # show hidden files
set number on         # show number of items index in dir
set drawbox           # draw borders around columns
set tempmarks 'abcdefghijklmnopqrstuvwxzy' # set all lower case to temporary marks, sorta like vim, upper case are permanent

# set preview
set previewer ~/rams_dot_files/lf-previewer.sh

# CMDS/FUNCTIONS
cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

# define a custom 'delete' command
cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ $ans = "y" ] && rm -rf $fx
}}

cmd moveto ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    clear; echo "Move to where?"
    dest="$(fd -t d | fzf | sed 's|~|$HOME|' )" &&
    for x in $fx; do
        eval mv -iv \"$x\" \"$dest\"
    done &&
    echo "Files moved"
}}

# cmd copyto ${{
#     clear; tput cup $(($(tput lines)/3)); tput bold
#     set -f
#     clear; echo "Copy to where?"
#     dest="$(cut -d'	' -f2- ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf | sed 's|~|$HOME|' )" &&
#     for x in $fx; do
#         eval cp -ivr \"$x\" \"$dest\"
#     done &&
#     notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
# }}

# BINDINGS

# execute current file
map x !$f
map X $$f

# dedicated keys for file opener actions
map o open $f
# map o $mimeopen --ask $f   #mimeopen is alternative to xdg-open in linux

map D delete
map M moveto
# map C copyto
map a push %mkdir<space>
map <enter> shell

# RENAME SHORTCUTS
# map A rename # at the very end
# map c push A<c-u> # new rename
# map I push A<c-a> # at the very beginning
# map i push A<a-b><a-b><a-f> # before extention
# map a push A<a-b> # after extention
# map B bulkrename
# map b $setbg $f
