# LFRC

# SETTINGS
set shell sh
set shellopts '-eu'   # -e (exit on error), -u (error on unset vars)
set ifs "\n"          # good seperator for $fs and $fx
set scrolloff 10      # leave space at top and bottom
set icons             # show icon before item
set dircounts         # show # of items in dir
set info size         # show size next to item
set period 1          # refresh every 1 sec for dir updates
set hidden true       # show hidden files
set number true       # show number of items index in dir
set drawbox           # draw borders around columns
set tempmarks 'abcdefghijklmnopqrstuvwxzy' # set all lower case to temporary marks, sorta like vim, upper case are permanent

# set preview
set previewer ~/rams_dot_files/lf-previewer.sh

# CMDS/FUNCTIONS
cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

# define a custom 'delete' command
cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ $ans = "y" ] && rm -rf $fx
}}

cmd moveto ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    clear; echo "Move to where?"
    fdname='fd'; [ $(uname) = "Linux" ] && fdname="fdfind"
    dest="$(${fdname} -t d | fzf | sed 's|~|$HOME|' )" &&
    for x in $fx; do
        if git rev-parse > /dev/null 2>&1; then
            eval git mv \"$x\" \"$dest\"
        else
            eval mv -iv \"$x\" \"$dest\"
        fi
    done &&
    echo "Files moved"
}}

# taken from https://github.com/gokcehan/lf/wiki/Tips
cmd bulk-rename ${{
    old="$(mktemp)"
    new="$(mktemp)"
    if [ -n "$fs" ]; then
        fs="$(basename $fs)"
    else
        fs="$(ls)"
    fi
    printf '%s\n' "$fs" >"$old"
    printf '%s\n' "$fs" >"$new"
    $EDITOR "$new"
    [ "$(wc -l < "$new")" -ne "$(wc -l < "$old")" ] && exit
    paste "$old" "$new" | while IFS= read -r names; do
        src="$(printf '%s' "$names" | cut -f1)"
        dst="$(printf '%s' "$names" | cut -f2)"
        if [ "$src" = "$dst" ] || [ -e "$dst" ]; then
            continue
        fi
        mv -- "$src" "$dst"
    done
    rm -- "$old" "$new"
    lf -remote "send $id unselect"
}}

# cmd copyto ${{
#     clear; tput cup $(($(tput lines)/3)); tput bold
#     set -f
#     clear; echo "Copy to where?"
#     dest="$(cut -d'	' -f2- ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf | sed 's|~|$HOME|' )" &&
#     for x in $fx; do
#         eval cp -ivr \"$x\" \"$dest\"
#     done &&
#     notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
# }}

# BINDINGS
map B bulk-rename

# execute current file
map x !$f
map X $$f

map D delete
map M moveto
map a push %mkdir<space>
map <enter> shell

# map C copyto

# dedicated keys for file opener actions
# map o open $f
# map o $mimeopen --ask $f   #mimeopen is alternative to xdg-open in linux

# RENAME SHORTCUTS
# map A rename # at the very end
# map c push A<c-u> # new rename
# map I push A<c-a> # at the very beginning
# map i push A<a-b><a-b><a-f> # before extention
# map a push A<a-b> # after extention
# map b $setbg $f
